@using Sandbox;
@using System.Threading.Tasks;
@using Sandbox.UI;
@using Sandbox.Network;
@using Sandbox.Diagnostics;
@inherits PanelComponent

<root>

    <div class="left">

        <div class="title">
            Scene Tests
        </div>

        <div class="explanation">
            <p>
                The scenes below are used as tests and examples of the scene system. 
            </p>

            <p>
                Click a scene to enter it - press escape to return to this menu.
            </p>
        </div>

    </div>

    <div class="scene-list">

        @foreach( var group in ResourceLibrary.GetAll<SceneFile>().GroupBy( x => x.GetMetadata( "Group", "None" ) ).OrderBy( x => x.Key ) )
        {
            <div class="group">
                <h1>@group.Key</h1>

                <div class="scenes">
                    @foreach( var scene in group.OrderBy( x => x.Title ) )
                    {
                        <SceneButton Scene="@scene" OnSelected=@OpenScene></SceneButton> 
                    }
                </div>
            </div>
        }

    </div>

</root>

@code
{
    void OpenScene( SceneFile file )
    {
        Game.ActiveScene.Load(file);

        var go = new GameObject(true, "Return To Menu");
        go.Components.Create<ReturnToMenu>();
    }

    bool refreshing;
    List<LobbyInformation> list = new();

    protected override void OnEnabled()
    {
        base.OnEnabled();

        Assert.True(GameObject.IsValid());

        _ = RefreshLobbyList();
    }

    async Task RefreshLobbyList()
    {
        while ( true )
        {
            refreshing = true;
            StateHasChanged();

            list = await Networking.QueryLobbies();

            refreshing = false;
            StateHasChanged();

            await Task.DelayRealtimeSeconds( 5.0f );
        }
    }

    void OpenLobby( LobbyInformation lobby )
    {
        Networking.Connect( lobby.LobbyId );
    }

}
